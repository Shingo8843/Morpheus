"use strict";exports.id=363,exports.ids=[363],exports.modules={7220:(e,t,n)=>{n.d(t,{RI:()=>r,ZI:()=>i,et:()=>d,mX:()=>s,me:()=>o,rf:()=>a});const o=["tokenizer","index","documentsStore","sorter"],r=["validateSchema","getDocumentIndexId","getDocumentProperties","formatElapsedTime"];async function a(e,t,n,o){const r=e.length;for(let a=0;a<r;a++)await e[a](t,n,o)}async function i(e,t,n){const o=e.length;for(let r=0;r<o;r++)await e[r](t,n)}async function s(e,t,n,o,r){const a=e.length;for(let i=0;i<a;i++)await e[i](t,n,o,r)}async function d(e,t,n,o){const r=e.length;for(let a=0;a<r;a++)await e[a](t,n,o)}},3714:(e,t,n)=>{function o(){return{idToInternalId:new Map,internalIdToId:[],save:r,load:a}}function r(e){return{internalIdToId:e.internalIdToId}}function a(e,t){const{internalIdToId:n}=t;e.internalDocumentIDStore.idToInternalId.clear(),e.internalDocumentIDStore.internalIdToId=[];for(let t=0;t<n.length;t++)e.internalDocumentIDStore.idToInternalId.set(n[t],t+1),e.internalDocumentIDStore.internalIdToId.push(n[t])}function i(e,t){if("string"==typeof t){const n=e.idToInternalId.get(t);if(n)return n;const o=e.idToInternalId.size+1;return e.idToInternalId.set(t,o),e.internalIdToId.push(t),o}return t>e.internalIdToId.length?i(e,t.toString()):t}function s(e,t){if(e.internalIdToId.length<t)throw new Error(`Invalid internalId ${t}`);return e.internalIdToId[t-1]}n.d(t,{HM:()=>i,K7:()=>s,Lo:()=>o})},9484:(e,t,n)=>{n.d(t,{v:()=>s,_:()=>d});const o=Symbol("orama.insertions"),r=Symbol("orama.removals");var a;const i=(null===(a=globalThis.process)||void 0===a?void 0:a.emitWarning)??function(e,t){console.warn(`[WARNING] [${t.code}] ${e}`)};function s(e){"number"!=typeof e[o]&&(queueMicrotask((()=>{e[o]=void 0})),e[o]=0),e[o]>1e3?(i("Orama's insert operation is synchronous. Please avoid inserting a large number of document in a single operation in order not to block the main thread or, in alternative, please use insertMultiple.",{code:"ORAMA0001"}),e[o]=-1):e[o]>=0&&e[o]++}function d(e){"number"!=typeof e[r]&&(queueMicrotask((()=>{e[r]=void 0})),e[r]=0),e[r]>1e3?(i("Orama's remove operation is synchronous. Please avoid removing a large number of document in a single operation in order not to block the main thread, in alternative, please use updateMultiple.",{code:"ORAMA0002"}),e[r]=-1):e[r]>=0&&e[r]++}},4363:(e,t,n)=>{n.r(t),n.d(t,{remove:()=>i,removeMultiple:()=>s});var o=n(7220),r=n(3714),a=n(9484);async function i(e,t,n,i){let s=!0;const{index:d,docs:l}=e.data,c=await e.documentsStore.get(l,t);if(!c)return!1;const u=(0,r.K7)(e.internalDocumentIDStore,(0,r.HM)(e.internalDocumentIDStore,t)),m=await e.documentsStore.count(l);i||await(0,o.rf)(e.beforeRemove,e,u);const I=await e.index.getSearchableProperties(d),f=await e.index.getSearchablePropertiesWithTypes(d),v=await e.getDocumentProperties(c,I);for(const o of I){var p,g,w,h;const r=v[o];if(void 0===r)continue;const a=f[o];await(null===(g=(p=e.index).beforeRemove)||void 0===g?void 0:g.call(p,e.data.index,o,u,r,a,n,e.tokenizer,m)),await e.index.remove(e.index,e.data.index,o,t,r,a,n,e.tokenizer,m)||(s=!1),await(null===(h=(w=e.index).afterRemove)||void 0===h?void 0:h.call(w,e.data.index,o,u,r,a,n,e.tokenizer,m))}const T=await e.sorter.getSortableProperties(e.data.sorting),D=await e.getDocumentProperties(c,T);for(const n of T)void 0!==D[n]&&await e.sorter.remove(e.data.sorting,n,t);return i||await(0,o.rf)(e.afterRemove,e,u),await e.documentsStore.remove(e.data.docs,t),(0,a._)(e),s}async function s(e,t,n,a,s){let d=0;n||(n=1e3);const l=s?[]:t.map((t=>(0,r.K7)(e.internalDocumentIDStore,(0,r.HM)(e.internalDocumentIDStore,t))));return s||await(0,o.ZI)(e.beforeRemoveMultiple,e,l),await new Promise(((o,r)=>{let l=0;setTimeout((async function c(){const u=t.slice(l*n,(l+1)*n);if(l++,!u.length)return o();for(const t of u)try{await i(e,t,a,s)&&d++}catch(e){r(e)}setTimeout(c,0)}),0)})),s||await(0,o.ZI)(e.afterRemoveMultiple,e,l),d}}};
//# sourceMappingURL=363.index.js.map